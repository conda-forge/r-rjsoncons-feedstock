{% set version = "1.3.1" %}
{% set posix = 'm2-' if win else '' %}

package:
  name: r-rjsoncons
  version: {{ version|replace("-", "_") }}

source:
  url:
    - {{ cran_mirror }}/src/contrib/rjsoncons_{{ version }}.tar.gz
    - {{ cran_mirror }}/src/contrib/Archive/rjsoncons/rjsoncons_{{ version }}.tar.gz
  sha256: 5432d9afb4faec2b18b8b32171503705bb9ed02be4e980a39552bb1aa52997c5

build:
  number: 1
  rpaths:
    - lib/R/lib/
    - lib/
  # Checking windows to see if it passes. Uncomment the line if it fails.
  # skip: true  # [win]

requirements:
  build:
    - cross-r-base {{ r_base }}    # [build_platform != target_platform]
    - r-cli                        # [build_platform != target_platform]
    - r-cpp11                      # [build_platform != target_platform]
    - r-tibble                     # [build_platform != target_platform]
    - {{ compiler('c') }}          # [not win]
    - {{ stdlib("c") }}            # [not win]
    - {{ compiler('m2w64_c') }}    # [win]
    - {{ stdlib("c") }}            # [win]
    - {{ compiler('cxx') }}        # [not win]
    - {{ compiler('m2w64_cxx') }}  # [win]
    - {{ posix }}filesystem        # [win]
    - {{ posix }}make
    - {{ posix }}sed               # [win]
    - {{ posix }}coreutils         # [win]
    - {{ posix }}zip               # [win]
  host:
    - r-base
    - r-cli
    - r-cpp11
    - r-tibble
  run:
    - r-base
    - r-cli
    - r-cpp11
    - r-tibble

test:
  commands:
    - $R -e "library('rjsoncons')"           # [not win]
    - "\"%R%\" -e \"library('rjsoncons')\""  # [win]

about:
  home: https://mtmorgan.github.io/rjsoncons/
  dev_url: https://github.com/mtmorgan/rjsoncons
  license: BSL-1.0
  license_family: OTHER
  license_file: LICENSE_1_0.txt
  summary: The 'jsoncons' <https://danielaparker.github.io/jsoncons/> 'C++' header-only library constructs representations from a 'JSON' character vector, and provides extensions for flexible queries and other operations on 'JSON' objects. This package has simple 'R' wrappers to support 'JSONpath' and 'JMESpath' queries
    into 'JSON' strings or 'R' objects. The 'jsoncons' library is also be easily linked to other packages for direct access to 'C++' functionality.

extra:
  recipe-maintainers:
    - conda-forge/r
